{"version":3,"sources":["Components/AddItem.js","Components/Search.js","Components/EditItem.js","Components/Cart.js","Components/AppTabs.js","App.js","reportWebVitals.js","index.js"],"names":["AddItem","getAllItems","useState","item","price","product","setProduct","status","message","error","setError","handleChange","e","preventDefault","target","name","value","prevInput","addProduct","a","newProduct","replace","letter","toUpperCase","axios","post","then","res","catch","response","data","className","Alert","color","Button","onClick","Form","FormGroup","Label","for","Input","type","id","placeholder","onChange","disabled","Search","addToCart","deleteProduct","filteredProducts","handleSearchName","filteredProduct","cart","quantity","setQuantity","onFocus","min","step","handleQuantityChange","Table","striped","map","index","scope","Intl","NumberFormat","format","find","el","_id","EditItem","props","modal","toggle","itemToChange","editCart","useEffect","setNewProduct","checkedOrNot","setCheckedOrNot","editProductInDB","editedProductInDB","put","alert","editProductInCart","editedProductInCart","cartCopy","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","defaultChecked","filter","deleteProductFromCart","Cart","state","clientName","setState","setItemToChange","getTotal","sum","i","length","Row","Col","style","textDecoration","border","this","handleClientName","display","justifyContent","dateForNow","cursor","backgroundColor","height","xs","Component","AppTabs","componentRef","useRef","handlePrint","useReactToPrint","content","current","pageStyle","activeTab","setActiveTab","setClientName","tab","products","setProducts","get","setCart","setFilteredProduct","searchDate","newObj","qtyObj","returnedTarget","Object","assign","concat","err","console","delete","setDateForNow","today","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","secondes","getSeconds","setInterval","includes","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","sm","ref","newCart","input","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae2ed305.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Alert, Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nfunction AddItem({ getAllItems }) {\r\n  const [product, setProduct] = useState({ item: \"\", price: \"\" });\r\n  const [error, setError] = useState({ status: \"\", message: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setProduct((prevInput) => {\r\n      return {\r\n        ...prevInput,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addProduct = async (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"Product Added\");\r\n    const newProduct = {\r\n      item: product.item.replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter) => letter.toUpperCase()),\r\n      price: product.price,\r\n    };\r\n    await axios\r\n      .post(\"/addItem\", newProduct)\r\n      .then((res) => {\r\n        // res.status === 200 && getAllItems();\r\n        if (res.status === 200) {\r\n          getAllItems();\r\n          setProduct({ item: \"\", price: \"\" });\r\n        }\r\n      })\r\n      // .then(setProduct({ item: \"\", price: \"\" }))\r\n      .catch((error) => {\r\n        // console.log(error.response.data);\r\n        setError({ status: error.response.status, message: error.response.data });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"rowContainer\">\r\n      <h4>Add A New Product</h4>\r\n      {error.message !== \"\" ? (\r\n        // Show Error\r\n        <>\r\n          <Alert color=\"danger\">\r\n            {`${error.message}:`}\r\n            <br />\r\n            {`Item: ${product.item}`}\r\n            <br />\r\n            {`Price: ${product.price}`}\r\n          </Alert>\r\n          <Button\r\n            onClick={(e) => {\r\n              setError({ message: \"\", status: \"\" });\r\n              setProduct({ item: \"\", price: \"\" });\r\n            }}\r\n          >\r\n            OK\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <Form>\r\n          <FormGroup>\r\n            <Label for=\"item\">Item</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"item\"\r\n              placeholder=\"Item\"\r\n              name=\"item\"\r\n              onChange={handleChange}\r\n              value={product.item.replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter) =>\r\n                letter.toUpperCase()\r\n              )}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"price\">Price</Label>\r\n            <Input\r\n              type=\"number\"\r\n              id=\"price\"\r\n              placeholder=\"Price\"\r\n              name=\"price\"\r\n              onChange={handleChange}\r\n              value={product.price}\r\n            />\r\n          </FormGroup>\r\n          <Button\r\n            color=\"success\"\r\n            disabled={product.item === \"\" || product.price === \"\"}\r\n            onClick={addProduct}\r\n          >\r\n            Add New Product\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddItem;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Input, Table, Label } from \"reactstrap\";\r\n\r\nfunction Search({\r\n  addToCart,\r\n  deleteProduct,\r\n  filteredProducts,\r\n  handleSearchName,\r\n  filteredProduct,\r\n  cart,\r\n}) {\r\n  const [quantity, setQuantity] = useState(0);\r\n\r\n  const handleQuantityChange = (e) => {\r\n    e.preventDefault();\r\n    setQuantity(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"rowContainer\">\r\n      <Input\r\n        className=\"form-control\"\r\n        onChange={(e) => handleSearchName(e.target.value)}\r\n        placeholder=\"Search...\"\r\n        value={filteredProduct}\r\n      />\r\n\r\n      <Label for=\"Quantity\">Quantity</Label>\r\n      <Input\r\n        placeholder=\"Quantity\"\r\n        type=\"number\"\r\n        id=\"Quantity\"\r\n        onFocus={(e) => {\r\n          e.preventDefault();\r\n          setQuantity(\"\");\r\n        }}\r\n        min={1}\r\n        step=\"1\"\r\n        value={quantity}\r\n        onChange={(e) => handleQuantityChange(e)}\r\n      />\r\n\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Product Name</th>\r\n            <th>Unit Price</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredProducts.map((item, index) => (\r\n            <tr key={item._id}>\r\n              <th scope=\"row\">{index + 1}</th>\r\n              <td>{item.item}</td>\r\n              {/* <td>{item.price}</td> */}\r\n              <td>{new Intl.NumberFormat(\"ar-TN\").format(item.price)}</td>\r\n              <td>\r\n                <Button\r\n                  color=\"primary\"\r\n                  // Rq:  You can convert a truthy or falsy value to true boolean with the !! operator.\r\n                  disabled={\r\n                    quantity === \"0\" ||\r\n                    quantity === 0 ||\r\n                    quantity === \"\" ||\r\n                    !!cart.find((el) => el.item === item.item)\r\n                  }\r\n                  onClick={(e) => {\r\n                    addToCart(item._id, quantity);\r\n                    setQuantity(\"\");\r\n                    // localStorage.setItem(\r\n                    //   `${item.item}`,\r\n                    //   JSON.stringify({ ...item, quantity })\r\n                    // );\r\n                  }}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </td>\r\n              <td>\r\n                <Button color=\"danger\" onClick={() => deleteProduct(item._id)}>\r\n                  delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from \"reactstrap\";\r\n\r\nconst EditItem = (props) => {\r\n  const { modal, toggle, itemToChange, cart, editCart } = props;\r\n  useEffect(() => {\r\n    setNewProduct(itemToChange);\r\n  }, [modal, itemToChange]);\r\n  const [newProduct, setNewProduct] = useState(itemToChange);\r\n  const [checkedOrNot, setCheckedOrNot] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setNewProduct((prevInput) => {\r\n      return {\r\n        ...prevInput,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const editProductInDB = async () => {\r\n    const editedProductInDB = {\r\n      item: newProduct.item.replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter) => letter.toUpperCase()),\r\n      price: newProduct.price,\r\n    };\r\n    await axios.put(`/Update_Product/${newProduct._id}`, editedProductInDB).then((res) => {\r\n      res.status === 200 && alert(\"Product edited in DB\");\r\n    });\r\n  };\r\n  const editProductInCart = () => {\r\n    const editedProductInCart = {\r\n      item: newProduct.item.replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter) => letter.toUpperCase()),\r\n      price: newProduct.price,\r\n      quantity: newProduct.quantity,\r\n      _id: newProduct._id,\r\n    };\r\n    const cartCopy = cart.map((el) =>\r\n      el._id === newProduct._id ? { ...cart, ...editedProductInCart } : el\r\n    );\r\n    editCart(cartCopy);\r\n  };\r\n  const deleteProductFromCart = () => {\r\n    const cartCopy = cart.filter((el) => el._id !== newProduct._id);\r\n    editCart(cartCopy);\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={modal}>\r\n      <ModalHeader toggle={toggle}>Edit Item</ModalHeader>\r\n      <ModalBody>\r\n        <Label for=\"item\">Item</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"item\"\r\n          id=\"item\"\r\n          value={newProduct.item}\r\n          onChange={handleChange}\r\n        />\r\n        <Label for=\"price\">Price</Label>\r\n        <Input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          id=\"price\"\r\n          value={newProduct.price}\r\n          onChange={handleChange}\r\n        />\r\n        <Label for=\"quantity\">Quantity</Label>\r\n        <Input\r\n          type=\"number\"\r\n          name=\"quantity\"\r\n          id=\"quantity\"\r\n          value={newProduct.quantity}\r\n          onChange={handleChange}\r\n        />\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <Input\r\n          type=\"checkbox\"\r\n          defaultChecked={checkedOrNot}\r\n          onChange={(e) => {\r\n            setCheckedOrNot(!checkedOrNot);\r\n          }}\r\n        />\r\n        Change Product In DB\r\n        <Button\r\n          color=\"primary\"\r\n          disabled={newProduct === itemToChange}\r\n          onClick={(e) =>\r\n            !checkedOrNot\r\n              ? editProductInCart()\r\n              : (editProductInCart(), editProductInDB(), setCheckedOrNot(false))\r\n          }\r\n        >\r\n          Save\r\n        </Button>{\" \"}\r\n        <Button color=\"secondary\" onClick={toggle}>\r\n          Close\r\n        </Button>\r\n        <Button color=\"danger\" onClick={(e) => deleteProductFromCart()}>\r\n          Delete\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditItem;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Row, Col, Input } from \"reactstrap\";\r\nimport EditItem from \"./EditItem\";\r\n\r\nexport class Cart extends Component {\r\n  state = {\r\n    modal: false,\r\n    itemToChange: \"\",\r\n    clientName: \"\",\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  };\r\n  setItemToChange = (item) => {\r\n    return this.setState({ itemToChange: item });\r\n  };\r\n\r\n  getTotal = () => {\r\n    let sum = 0;\r\n    for (let i = 0; i < this.props.cart.length; i++) {\r\n      sum += this.props.cart[i].price * this.props.cart[i].quantity;\r\n    }\r\n    return sum;\r\n  };\r\n\r\n  // handleClientName = (e) => {\r\n  //   e.preventDefault();\r\n  //   this.setState({ clientName: e.target.value });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"rowContainer\">\r\n          {/* <h4>Your Cart</h4> */}\r\n          <Row>\r\n            <Col>\r\n              <Input\r\n                style={{ textDecoration: \"none\", border: \"none\" }}\r\n                placeholder=\"Name\"\r\n                value={this.props.clientName.replace(/(^\\w{1})|(\\s+\\w{1})/g, (letter) =>\r\n                  letter.toUpperCase()\r\n                )}\r\n                onChange={this.props.handleClientName}\r\n              />\r\n            </Col>\r\n            <Col style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              {this.props.dateForNow}\r\n            </Col>\r\n          </Row>\r\n          <Table striped>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Quantity</th>\r\n                <th>Product Name</th>\r\n                <th>Unit Price</th>\r\n                <th>Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.cart.map((item, index) => (\r\n                <tr\r\n                  style={{ cursor: \"pointer\" }}\r\n                  key={item._id}\r\n                  onClick={(e) => {\r\n                    this.setItemToChange(item);\r\n                    this.toggle();\r\n                  }}\r\n                >\r\n                  <th scope=\"row\">{index + 1}</th>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.item}</td>\r\n                  <td>{new Intl.NumberFormat(\"ar-TN\").format(item.price)}</td>\r\n                  <td>{new Intl.NumberFormat(\"ar-TN\").format(item.price * item.quantity)}</td>\r\n                  {/* {localStorage.setItem(`${item.item}`, JSON.stringify(item))} */}\r\n                  <EditItem\r\n                    modal={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    itemToChange={this.state.itemToChange}\r\n                    cart={this.props.cart}\r\n                    editCart={this.props.editCart}\r\n                  />\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <Row\r\n            style={{\r\n              backgroundColor: \"burlywood\",\r\n              height: \"2rem\",\r\n            }}\r\n          >\r\n            <Col xs=\"6\">\r\n              {this.props.cart.length}{\" \"}\r\n              {this.props.cart.length <= 1 ? <span>Product</span> : <span>Products</span>}\r\n            </Col>\r\n            <Col xs=\"6\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              Total= {new Intl.NumberFormat(\"ar-TN\").format(this.getTotal())}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\nimport AddItem from \"./AddItem\";\r\nimport Search from \"./Search\";\r\nimport Cart from \"./Cart\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nconst AppTabs = () => {\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    pageStyle: `size: 302.36px 188.98px`,\r\n  });\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [clientName, setClientName] = useState(\"\");\r\n\r\n  const handleClientName = (e) => {\r\n    e.preventDefault();\r\n    // this.setState({ clientName: e.target.value });\r\n    setClientName(e.target.value);\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const getAllItems = async () => {\r\n    await axios.get(\"/get\").then((res) => {\r\n      setProducts(res.data);\r\n    });\r\n  };\r\n\r\n  const [cart, setCart] = useState([]);\r\n  const [filteredProduct, setFilteredProduct] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAllItems();\r\n    searchDate();\r\n  }, []);\r\n\r\n  // const editProduct=async (_id)=>{\r\n  //   await axios.put(`http://localhost:5000/Update_Product/${_id}`,)\r\n  // }\r\n\r\n  const addToCart = async (_id, quantity) => {\r\n    await axios\r\n      .get(`/display_Product/${_id}`)\r\n      .then((res) => {\r\n        const newObj = res.data;\r\n        const qtyObj = { quantity: quantity };\r\n        const returnedTarget = Object.assign(newObj, qtyObj);\r\n        setCart(cart.concat(returnedTarget));\r\n        setFilteredProduct(\"\");\r\n        // console.log(returnedTarget)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  const deleteProduct = async (_id) => {\r\n    await axios.delete(`/Delete_Product/${_id}`).then((res) => {\r\n      res.status === 200 && getAllItems();\r\n    });\r\n  };\r\n\r\n  const handleSearchName = (input) => {\r\n    setFilteredProduct(input);\r\n  };\r\n\r\n  const editCart = (newCart) => {\r\n    setCart(newCart);\r\n  };\r\n\r\n  const [dateForNow, setDateForNow] = useState(\"\");\r\n  const searchDate = () => {\r\n    var today = new Date();\r\n    var day = today.getDate();\r\n    var month = today.getMonth() + 1;\r\n    var year = today.getFullYear();\r\n    var hours = today.getHours();\r\n    var minutes = today.getMinutes();\r\n    var secondes = today.getSeconds();\r\n    if (day < 10) {\r\n      day = \"0\" + day;\r\n    }\r\n\r\n    if (month < 10) {\r\n      month = \"0\" + month;\r\n    }\r\n\r\n    if (hours < 10) {\r\n      hours = \"0\" + hours;\r\n    }\r\n\r\n    if (minutes < 10) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n\r\n    if (secondes < 10) {\r\n      secondes = \"0\" + secondes;\r\n    }\r\n\r\n    today = day + \"/\" + month + \"/\" + year + \"-\" + hours + \":\" + minutes + \":\" + secondes;\r\n    // console.log(today);\r\n    setDateForNow(today);\r\n  };\r\n  setInterval(searchDate, 1000);\r\n\r\n  let filteredProducts = [];\r\n  filteredProducts = products.filter((product) =>\r\n    product.item.toUpperCase().includes(filteredProduct.toUpperCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === \"1\" })}\r\n            onClick={() => {\r\n              toggle(\"1\");\r\n            }}\r\n          >\r\n            Cart\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === \"2\" })}\r\n            onClick={() => {\r\n              toggle(\"2\");\r\n            }}\r\n          >\r\n            Add To Cart\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === \"3\" })}\r\n            onClick={() => {\r\n              toggle(\"3\");\r\n            }}\r\n          >\r\n            New Product\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n          <Row>\r\n            <Col sm=\"12\">\r\n              <Cart\r\n                cart={cart}\r\n                ref={componentRef}\r\n                editCart={editCart}\r\n                clientName={clientName}\r\n                handleClientName={handleClientName}\r\n                dateForNow={dateForNow}\r\n              />\r\n              <button disabled={clientName === \"\"} onClick={handlePrint}>\r\n                Print this out!\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n          <Row>\r\n            <Col sm=\"12\">\r\n              <Search\r\n                filteredProducts={filteredProducts}\r\n                cart={cart}\r\n                addToCart={addToCart}\r\n                deleteProduct={deleteProduct}\r\n                handleSearchName={handleSearchName}\r\n                filteredProduct={filteredProduct}\r\n              />\r\n              {/* {JSON.stringify(localStorage.getItem(\"Cart\"))} */}\r\n              {/* {cart.length !== 0 && localStorage.setItem(\"Cart\", JSON.stringify(cart))} */}\r\n            </Col>\r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <Row>\r\n            <AddItem getAllItems={getAllItems} />\r\n          </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTabs;\r\n","import AppTabs from \"./Components/AppTabs\";\nimport { Container } from \"reactstrap\";\n\nfunction App() {\n  return (\n    <Container>\n      <AppTabs/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}